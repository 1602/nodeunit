#!/usr/bin/env node

var
    fs = require('fs'),
    sys = require('sys');

require.paths.push(process.cwd());
var args = process.ARGV.slice(2);

var files = [];

var testrunner,
    config_file,
    config_param_found = false,
    reporter_file = 'default',
    reporter_param_found = false;

// a very basic pseudo --options parser
args.forEach(function (arg) {
    if (arg.slice(0, 9) === "--config=") {
        config_file = arg.slice(9);
    } else if (arg === '--config') {
        config_param_found = true;
    } else if (config_param_found) {
        config_file = arg;
        config_param_found = false;
    } else if (arg === '--reporter') {
        reporter_param_found = true;
    } else if (reporter_param_found) {
        reporter_file = arg;
        reporter_param_found = false;
    } else if ((arg === '-v') || (arg === '--version')) {
        var content = fs.readFileSync(__dirname + '/../package.json', 'utf8');
        var pkg = JSON.parse(content);
        console.log(pkg.version);
        process.exit(0);
    } else {
        files.push(arg);
    }
});

// load default options
var content = fs.readFileSync(__dirname + '/nodeunit.json', 'utf8');
var options = JSON.parse(content);

if (config_file) {
    content = fs.readFileSync(config_file, 'utf8');
    var custom_options = JSON.parse(content);
    
    for (var option in custom_options) {
        if (typeof option === 'string') {
            options[option] = custom_options[option];
        }
    }
}

try {
    testrunner = require('../lib/reporters/' + reporter_file);
} catch (e) {
    testrunner = require(reporter_file);
}

testrunner.run(files, options);

